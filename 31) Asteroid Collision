class Solution {
public:
    vector<int> asteroidCollision(vector<int>& nums) {
         
         vector<int>ans;
         int n=nums.size();

         stack<pair<int,int>>st;

         for(int i=n-1;i>=0;i--)
         {
             if(nums[i]<0)
             {
                 
                 st.push({nums[i],i});
             }
             else if(nums[i]>=0)
             {
                 while(st.size()>0)
                 {
                     if(nums[i]>abs(st.top().first))
                     {
                         nums[st.top().second]=1e9;
                         st.pop();
                     }
                     else if(nums[i]==abs(st.top().first))
                     {
                         nums[st.top().second]=1e9;
                         st.pop();
                         nums[i]=1e9;
                         break;
                     }
                     else
                     {
                         nums[i]=1e9;
                         break;
                     }
                 }

             }
         }

          map<pair<int,int>,int>mp;

          while(!st.empty())
          {
              mp[{st.top().first,st.top().second}]++;
              st.pop();
          }


          for(int i=0;i<n;i++)
          {
              if(nums[i]<0)
              {
                 if(mp[{nums[i],i}]>0) ans.push_back(nums[i]);

              }
              else
              {
                  if(nums[i]!=1e9) ans.push_back(nums[i]);
              }
          }

         return ans;
    }
};
