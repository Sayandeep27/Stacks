
    string infixToPostfix(string s) {
       
       int n=s.size();
       
       unordered_map<char,int>mp;
       
       mp['+']=1;
       mp['-']=1;
       mp['*']=2;
       mp['/']=2;
       mp['^']=3;
       mp['(']=-1;
       
       
       stack<char>st;
       string ans="";
       
       
       for(int i=0;i<n;i++)
       {
           if((s[i]>='a' and s[i]<='z') or (s[i]>='A' and s[i]<='Z') or (s[i]>='0' and s[i]<='9'))
           {
               ans+=s[i];
           }
           else if(s[i]=='(')
           {
               st.push(s[i]);
           }
           else if(s[i]==')')
           {
               while(st.top()!='(')
               {
                   ans+=st.top();
                   st.pop();
               }
               
               st.pop();
           }
           else
           {
               while(!st.empty() and mp[st.top()]>=mp[s[i]])
               {
                   ans+=st.top();
                   st.pop();
               }
               
               st.push(s[i]);
           }
       }
       
       
       while(!st.empty())
       {
           ans+=st.top();
           st.pop();
       }
       
       
       return ans;
       
    
    }
