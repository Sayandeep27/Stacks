class Solution {
public:
    int operation(int a,int b,string s)
    {
        if(s=="+")
        {
            return a+b;
        }
        else if(s=="-")                        //  This means evaluate postfix expression
        {
            return a-b;
        }
        else if(s=="*")
        {
            return a*b;
        }
        else
        {
            return a/b;
        }
        
    
        
    }
    bool check(string s)
    {
        if(s=="+" or s=="-" or s=="*" or s=="/")
        {
            return true;
        }
        
        return  false;
    }
    
    
    int evalRPN(vector<string>& tokens) {
        int n=tokens.size();
        
        stack<int>st;
        
        for(int i=0;i<n;i++)
        {
            if(check(tokens[i])==true)  // If tokens[i] is an operator
            {
                
                int a=st.top();  // Pop the second operand
                st.pop();

                int b=st.top();   // Pop the first operand
                st.pop();

                st.push(operation(b,a,tokens[i]));  // Perform operation and push result to stack
                
            }
            else
            {
                st.push(stoi(tokens[i]));   // Convert token to integer and push to stack if it's an operand
            }
        }

        return st.top();   // Return the final result from the stack

    }
};
