#include <iostream>
using namespace std;

class Node {
public:
    int data;
    Node* next;

    Node(int val) {
        data = val;
        next = nullptr;
    }
};

class Stack {
private:
    Node* top;

public:
    Stack() {
        top = nullptr;
    }

    void push(int val) {
        Node* newNode = new Node(val);
        if (!top) {
            top = newNode;
        } else {
            newNode->next = top;
            top = newNode;
        }
        cout << val << " pushed to stack\n";
    }

    void pop() {
        if (!top) {
            cout << "Stack underflow\n";
            return;
        }
        Node* temp = top;
        top = top->next;
        cout << temp->data << " popped from stack\n";
        delete temp;
    }

    void peek() {
        if (!top) {
            cout << "Stack is empty\n";
            return;
        }
        cout << "Top element is: " << top->data << endl;
    }

    bool isEmpty() {
        return top == nullptr;
    }
};

int main() {
    Stack s;
    s.push(10);
    s.push(20);
    s.push(30);
    s.peek();
    s.pop();
    s.peek();
    return 0;
}
